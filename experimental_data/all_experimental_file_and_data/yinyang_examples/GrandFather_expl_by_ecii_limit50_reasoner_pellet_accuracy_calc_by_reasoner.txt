Program started.............
Program starts at: 09.04.2018  04.30.56 AM
Working with confFile: GrandFather.config
Algorithm starts at: 09.04.2018  04.30.56 AM

User defined parameters:
K1/negExprTypeLimit: 3
K2/hornClauseLimit: 3
K3/objPropsCombinationLimit: 3
K4/hornClausesListMaxSize: 50
K5/candidateClassesListMaxSize: 50
ReasonerName: pellet
posIndivs from conf:
	Isidoro
	Gianni
	NonnoLuigi
negIndivs from conf:
	Valentina
	Marisella
	Luca
	Carmela
	Dino
	Maria
	Miriam
	Serena
	Ombretta
	NonnaLina
	Giovanna
	Mauro
	Nella
	Luigi

Algorithm ends at: 09.04.2018  04.30.56 AM

Algorithm duration: 0.126 sec

####################Solutions####################:
solution 1: ((Person) ⊔ ( ¬ Female))
	solution from reasoner: Person ⊔ (¬Female)
	 coverage_score: 0.7647058823529411
	 coverage_score_by_reasoner: 1.0
	 f_measure: 0.6
	 f_measure_by_reasoner: 1.0
solution 2: ((Male) ⊔ ( ¬ Female))
	solution from reasoner: Male ⊔ (¬Female)
	 coverage_score: 0.7647058823529411
	 coverage_score_by_reasoner: 0.4117647058823529
	 f_measure: 0.6
	 f_measure_by_reasoner: 0.375
solution 3: (( ¬ Female) ⊔ (Person ⊓ ¬ Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊔ (¬Female)
	 coverage_score: 0.7647058823529411
	 coverage_score_by_reasoner: 0.0
	 f_measure: 0.6
	 f_measure_by_reasoner: 0.0
solution 4: (( ¬ Female) ⊔ (Person) ⊔ (Male))
	solution from reasoner: Male ⊔ Person ⊔ (¬Female)
	 coverage_score: 0.7647058823529411
	 coverage_score_by_reasoner: 1.0
	 f_measure: 0.6
	 f_measure_by_reasoner: 1.0
solution 5: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female))
	solution from reasoner: Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)
	 coverage_score: 0.7647058823529411
	 f_measure: 0.6
solution 6: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female))
	solution from reasoner: Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)
	 coverage_score: 0.7647058823529411
	 f_measure: 0.6
solution 7: ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: ∃ hasSibling.(Female ⊔ (¬Person))
	 coverage_score: 0.7058823529411765
	 f_measure: 0.28571428571428575
solution 8: ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: ∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))
	 coverage_score: 0.7058823529411765
	 f_measure: 0.28571428571428575
solution 9: ∃hasSibling.( ¬ Person)
	solution from reasoner: ∃ hasSibling.(¬Person)
	 coverage_score: 0.6470588235294118
	 f_measure: 0.0
solution 10: ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person))
	solution from reasoner: ∃ hasSibling.((¬Male) ⊔ (¬Person))
	 coverage_score: 0.6470588235294118
	 f_measure: 0.0
solution 11: ∃hasParent.( ¬ Male)
	solution from reasoner: ∃ hasParent.(¬Male)
	 coverage_score: 0.5882352941176471
	 f_measure: 0.0
solution 12: ∃hasParent.( ¬ Person)
	solution from reasoner: ∃ hasParent.(¬Person)
	 coverage_score: 0.5882352941176471
	 f_measure: 0.0
solution 13: ( ¬ Female)
	solution from reasoner: ¬Female
	 coverage_score: 0.5882352941176471
	 f_measure: 0.0
solution 14: ∃hasParent.( ¬ Female)
	solution from reasoner: ∃ hasParent.(¬Female)
	 coverage_score: 0.5882352941176471
	 f_measure: 0.0
solution 15: ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: ∃ hasParent.((¬Female) ⊔ (¬Male))
	 coverage_score: 0.5882352941176471
	 f_measure: 0.0
solution 16: ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ∃ hasParent.((¬Female) ⊔ (¬Person))
	 coverage_score: 0.5882352941176471
	 f_measure: 0.0
solution 17: ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: ∃ hasParent.((¬Male) ⊔ (¬Person))
	 coverage_score: 0.5882352941176471
	 f_measure: 0.0
solution 18: ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))
	 coverage_score: 0.5882352941176471
	 f_measure: 0.0
solution 19: ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(¬Person))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 20: ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(¬Person))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 21: ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(¬Person))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 22: ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 23: ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 24: ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 25: ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(¬Person))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 26: ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 27: ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 28: ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 29: ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 30: ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 31: ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 32: ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 33: ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 34: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.2
solution 35: ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 36: ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 37: ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 38: ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 39: ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 40: ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 41: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.2
solution 42: ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 43: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.2
solution 44: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.2
solution 45: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.2
solution 46: ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 47: ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 48: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.2
solution 49: ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 50: ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 51: ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 52: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.2
solution 53: ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.0
solution 54: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.2
solution 55: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.2
solution 56: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.2
solution 57: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.2
solution 58: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.5294117647058824
	 f_measure: 0.2
solution 59: ( ¬ Female) ⊓ ∃hasSibling.( ¬ Person)
	solution from reasoner: (¬Female) ⊓ (∃ hasSibling.(¬Person))
	 coverage_score: 0.47058823529411764
	 f_measure: 0.0
solution 60: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasSibling.(¬Person))
	 coverage_score: 0.47058823529411764
	 f_measure: 0.0
solution 61: ( ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (¬Female) ⊓ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.47058823529411764
	 f_measure: 0.0
solution 62: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person))
	solution from reasoner: (¬Female) ⊓ (∃ hasSibling.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.47058823529411764
	 f_measure: 0.0
solution 63: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasSibling.(¬Person))
	 coverage_score: 0.47058823529411764
	 f_measure: 0.0
solution 64: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (¬Female) ⊓ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.47058823529411764
	 f_measure: 0.0
solution 65: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasSibling.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.47058823529411764
	 f_measure: 0.0
solution 66: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(¬Person))
	 coverage_score: 0.47058823529411764
	 f_measure: 0.0
solution 67: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.( ¬ Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasSibling.(¬Person))
	 coverage_score: 0.47058823529411764
	 f_measure: 0.0
solution 68: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasSibling.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.47058823529411764
	 f_measure: 0.0
solution 69: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.47058823529411764
	 f_measure: 0.0
solution 70: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(¬Person))
	 coverage_score: 0.47058823529411764
	 f_measure: 0.0
solution 71: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasSibling.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.47058823529411764
	 f_measure: 0.0
solution 72: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(¬Person))
	 coverage_score: 0.47058823529411764
	 f_measure: 0.0
solution 73: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.47058823529411764
	 f_measure: 0.0
solution 74: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.47058823529411764
	 f_measure: 0.0
solution 75: ( ¬ Female) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (¬Female) ⊓ (∃ hasParent.(¬Female))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 76: ( ¬ Female) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (¬Female) ⊓ (∃ hasParent.(¬Male))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 77: ( ¬ Female) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (¬Female) ⊓ (∃ hasParent.(¬Person))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 78: ( ¬ Female) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(¬Person))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 79: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasParent.(¬Person))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 80: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasParent.(¬Male))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 81: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasParent.(¬Female))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 82: ( ¬ Female) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(¬Person))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 83: ( ¬ Female) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (¬Female) ⊓ (∃ hasParent.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 84: ( ¬ Female) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (¬Female) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 85: ( ¬ Female) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(¬Person))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 86: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasParent.(¬Person))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 87: ( ¬ Female) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (¬Female) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Male)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 88: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasParent.(¬Male))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 89: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasParent.(¬Female))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 90: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 91: ( ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 92: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 93: ( ¬ Female) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (¬Female) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 94: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 95: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasParent.(¬Female))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 96: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Male)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 97: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 98: ( ¬ Female) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 99: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 100: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(¬Person))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 101: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(¬Male))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 102: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 103: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 104: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 105: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasParent.(¬Person))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 106: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(¬Female))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 107: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 108: ( ¬ Female) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(¬Person))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 109: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 110: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 111: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Male)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 112: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasParent.(¬Male))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 113: ( ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 114: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 115: ( ¬ Female) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 116: ( ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 117: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 118: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 119: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 120: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 121: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 122: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(¬Female))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 123: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 124: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 125: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(¬Male))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 126: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 127: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 128: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 129: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 130: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Male)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 131: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 132: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 133: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 134: ( ¬ Female) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 135: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 136: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 137: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 138: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 139: ( ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 140: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(¬Person))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 141: ( ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 142: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 143: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 144: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Male)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 145: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 146: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 147: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 148: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 149: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 150: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 151: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 152: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 153: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 154: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(¬Female))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 155: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 156: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 157: ( ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 158: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 159: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(¬Person))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 160: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 161: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 162: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(¬Male))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 163: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 164: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 165: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 166: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 167: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 168: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 169: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 170: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 171: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 172: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 173: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 174: ( ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 175: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 176: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 177: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 178: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 179: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Male)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 180: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 181: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 182: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 183: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 184: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 185: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 186: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 187: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 188: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 189: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 190: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 191: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 192: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 193: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 194: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 195: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 196: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 197: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 198: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 199: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Male)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 200: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 201: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 202: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 203: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 204: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 205: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 206: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 207: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 208: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 209: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 210: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 211: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 212: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 213: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 214: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 215: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 216: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 217: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 218: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 219: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 220: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 221: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 222: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 223: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 224: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 225: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 226: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 227: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 228: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 229: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 230: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 231: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 232: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 233: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 234: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 235: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 236: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 237: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 238: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 239: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 240: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 241: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 242: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 243: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 244: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 245: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 246: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 247: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 248: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 249: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 250: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 251: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 252: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 253: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 254: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 255: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 256: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 257: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 258: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 259: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 260: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 261: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 262: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 263: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 264: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 265: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 266: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 267: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 268: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 269: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 270: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 271: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))) ⊓ (¬Female)
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 272: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 273: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 274: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 275: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 276: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 277: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 278: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 279: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 280: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 281: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 282: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 283: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 284: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 285: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 286: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 287: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 288: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 289: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 290: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 291: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 292: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 293: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 294: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 295: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 296: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 297: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 298: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 299: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Person) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Person)))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 300: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 301: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 302: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 303: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 304: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 305: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 306: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 307: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 308: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 309: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 310: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 311: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 312: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 313: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 314: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ ( ¬ Person)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.((¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 315: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 316: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 317: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 318: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 319: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.4117647058823529
	 f_measure: 0.0
solution 320: ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: ∃ hasSibling.(Female ⊔ (¬Male))
	 coverage_score: 0.35294117647058826
	 f_measure: 0.15384615384615383
solution 321: ∃hasSibling.( ¬ Male)
	solution from reasoner: ∃ hasSibling.(¬Male)
	 coverage_score: 0.29411764705882354
	 f_measure: 0.0
solution 322: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.29411764705882354
	 f_measure: 0.14285714285714288
solution 323: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.29411764705882354
	 f_measure: 0.14285714285714288
solution 324: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.29411764705882354
	 f_measure: 0.14285714285714288
solution 325: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.29411764705882354
	 f_measure: 0.14285714285714288
solution 326: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.29411764705882354
	 f_measure: 0.14285714285714288
solution 327: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.29411764705882354
	 f_measure: 0.14285714285714288
solution 328: ( ¬ Female) ⊓ ∃hasSibling.( ¬ Male)
	solution from reasoner: (¬Female) ⊓ (∃ hasSibling.(¬Male))
	 coverage_score: 0.23529411764705882
	 f_measure: 0.0
solution 329: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasSibling.(¬Male))
	 coverage_score: 0.23529411764705882
	 f_measure: 0.0
solution 330: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (¬Female) ⊓ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.23529411764705882
	 f_measure: 0.0
solution 331: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasSibling.(¬Male))
	 coverage_score: 0.23529411764705882
	 f_measure: 0.0
solution 332: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(¬Male))
	 coverage_score: 0.23529411764705882
	 f_measure: 0.0
solution 333: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.( ¬ Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasSibling.(¬Male))
	 coverage_score: 0.23529411764705882
	 f_measure: 0.0
solution 334: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(¬Male))
	 coverage_score: 0.23529411764705882
	 f_measure: 0.0
solution 335: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(¬Male))
	 coverage_score: 0.23529411764705882
	 f_measure: 0.0
solution 336: (Person)
	solution from reasoner: Person
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 337: ∃hasChild.(Person)
	solution from reasoner: ∃ hasChild.Person
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 338: (Male)
	solution from reasoner: Male
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 339: ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(¬Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 340: ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: ∃ hasChild.(Female ⊔ Male)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 341: (Person ⊓ ¬ Female)
	solution from reasoner: Person ⊓ (¬Female)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 342: ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: ∃ hasChild.(Male ⊔ Person)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 343: (Male) ⊓ ∃hasChild.(Person)
	solution from reasoner: Male ⊓ (∃ hasChild.Person)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 344: ((Person) ⊔ (Male))
	solution from reasoner: Male ⊔ Person
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 345: ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: ∃ hasChild.(Female ⊔ Person)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 346: ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(¬Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 347: (Person) ⊓ ∃hasChild.(Person)
	solution from reasoner: Person ⊓ (∃ hasChild.Person)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 348: ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(¬Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 349: ( ¬ Female) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(¬Male))) ⊓ (¬Female)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 350: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 351: ( ¬ Female) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(¬Male))) ⊓ (¬Female)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 352: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: Male ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 353: ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 354: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: Person ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 355: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: Male ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 356: ( ¬ Female) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(¬Male))) ⊓ (¬Female)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 357: ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 358: ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 359: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 360: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: ∃ hasChild.(Female ⊔ Male ⊔ Person)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 361: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 362: ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 363: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: Person ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 364: ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 365: ((Male) ⊔ (Person ⊓ ¬ Female))
	solution from reasoner: Male ⊔ (Person ⊓ (¬Female))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 366: ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(¬Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 367: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 368: ((Person) ⊔ (Person ⊓ ¬ Female))
	solution from reasoner: Person ⊔ (Person ⊓ (¬Female))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 369: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: Person ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 370: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: Male ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 371: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 372: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 373: ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 374: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 375: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 376: ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 377: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))) ⊓ (¬Female)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 378: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: Male ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 379: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 380: ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 381: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 382: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 383: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 384: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female))
	solution from reasoner: Male ⊔ Person ⊔ (Person ⊓ (¬Female))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 385: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 386: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: Person ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 387: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 388: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 389: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 390: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 391: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 392: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 393: ( ¬ Female) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male))) ⊓ (¬Female)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 394: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 395: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 396: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 397: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 398: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))) ⊓ (¬Female)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 399: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 400: ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 401: ( ¬ Female) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male))) ⊓ (¬Female)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 402: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 403: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 404: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))) ⊓ (¬Female)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 405: ( ¬ Female) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(¬Male))) ⊓ (¬Female)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 406: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 407: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 408: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 409: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 410: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 411: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 412: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 413: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 414: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 415: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 416: ( ¬ Female) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male))) ⊓ (¬Female)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 417: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 418: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))) ⊓ (¬Female)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 419: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 420: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 421: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 422: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 423: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 424: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 425: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 426: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 427: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 428: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 429: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))) ⊓ (¬Female)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 430: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 431: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 432: ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 433: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 434: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 435: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 436: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 437: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 438: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 439: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 440: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))) ⊓ (¬Female)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 441: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 442: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 443: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 444: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 445: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 446: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 447: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 448: ( ¬ Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))) ⊓ (¬Female)
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 449: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 450: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 451: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 452: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 453: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 454: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 455: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 456: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 457: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 458: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 459: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 460: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 461: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 462: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 463: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 464: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 465: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 466: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 467: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 468: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 469: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 470: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 471: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 472: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 473: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 474: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 475: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 476: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 477: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 478: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 479: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 480: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 481: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 482: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 483: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 484: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 485: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 486: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 487: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 488: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 489: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 490: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 491: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 492: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 493: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 494: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 495: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 496: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 497: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 498: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 499: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 500: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 501: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 502: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 503: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Female)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 504: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 505: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 506: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 507: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 508: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 509: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.( ¬ Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(¬Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 510: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.3
solution 511: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 512: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 513: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 514: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 515: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 516: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 517: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 518: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 519: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 520: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 521: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.( ¬ Male) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(¬Male)))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 522: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 523: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 524: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(( ¬ Male) ⊔ ( ¬ Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.((¬Female) ⊔ (¬Male) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.17647058823529413
	 f_measure: 0.0
solution 525: ∃hasChild.(Male)
	solution from reasoner: ∃ hasChild.Male
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 526: ∃hasChild.(Female)
	solution from reasoner: ∃ hasChild.Female
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 527: (Male) ⊓ ∃hasChild.(Female)
	solution from reasoner: Male ⊓ (∃ hasChild.Female)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 528: (Person) ⊓ ∃hasChild.(Male)
	solution from reasoner: Person ⊓ (∃ hasChild.Male)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 529: (Person) ⊓ ∃hasChild.(Female)
	solution from reasoner: Person ⊓ (∃ hasChild.Female)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 530: (Male) ⊓ ∃hasChild.(Male)
	solution from reasoner: Male ⊓ (∃ hasChild.Male)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 531: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 532: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 533: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 534: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 535: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 536: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 537: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 538: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 539: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 540: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 541: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 542: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 543: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 544: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 545: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 546: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 547: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 548: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 549: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 550: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 551: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 552: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.11764705882352941
	 f_measure: 0.21052631578947367
solution 553: ∃hasSibling.(Female)
	solution from reasoner: ∃ hasSibling.Female
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 554: (Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 555: (Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 556: ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 557: ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 558: ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 559: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 560: (Person) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: Person ⊓ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 561: ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 562: (Person) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: Person ⊓ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 563: (Person) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 564: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 565: (Male) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 566: ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 567: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 568: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 569: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 570: ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 571: ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 572: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 573: ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 574: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 575: (Male) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 576: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 577: (Male) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: Male ⊓ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 578: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 579: (Person) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 580: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 581: (Male) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: Male ⊓ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 582: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 583: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 584: ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 585: (Male) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 586: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 587: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 588: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 589: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 590: (Male) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: Male ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 591: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 592: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 593: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 594: ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 595: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 596: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 597: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 598: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 599: (Male) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: Male ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 600: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 601: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 602: (Male) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 603: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 604: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 605: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 606: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 607: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 608: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 609: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 610: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 611: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 612: (Person) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 613: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 614: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 615: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 616: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 617: (Male) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: Male ⊓ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 618: (Person) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: Person ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 619: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 620: (Person) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: Person ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 621: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 622: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 623: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 624: (Person) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: Person ⊓ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 625: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 626: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 627: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 628: ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 629: (Person) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 630: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 631: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 632: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 633: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 634: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 635: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 636: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 637: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 638: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 639: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 640: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 641: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 642: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 643: (Male) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: Male ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 644: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 645: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 646: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 647: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 648: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 649: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 650: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 651: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 652: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 653: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 654: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 655: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 656: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 657: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 658: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 659: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 660: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 661: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 662: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 663: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 664: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 665: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 666: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 667: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 668: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 669: (Person) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: Person ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 670: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 671: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 672: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 673: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 674: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 675: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 676: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 677: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 678: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 679: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 680: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 681: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 682: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 683: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 684: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 685: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 686: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 687: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 688: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 689: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 690: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 691: (Person) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: Person ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 692: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 693: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 694: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 695: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 696: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 697: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 698: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 699: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 700: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 701: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 702: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 703: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 704: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 705: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 706: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 707: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 708: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 709: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 710: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 711: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 712: (Male) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: Male ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 713: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 714: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 715: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 716: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 717: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 718: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 719: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 720: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 721: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 722: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 723: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 724: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 725: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 726: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 727: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 728: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 729: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 730: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 731: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 732: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 733: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 734: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 735: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 736: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 737: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 738: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 739: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 740: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 741: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 742: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Female ⊔ (¬Male)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 743: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 744: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 745: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 746: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 747: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 748: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 749: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 750: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 751: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 752: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 753: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 754: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 755: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 756: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 757: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Female ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 758: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 759: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 760: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 761: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 762: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 763: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 764: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 765: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 766: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 767: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 768: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 769: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 770: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 771: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 772: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 773: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 774: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 775: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 776: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 777: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 778: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 779: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 780: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 781: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 782: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 783: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 784: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 785: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 786: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 787: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 788: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 789: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 790: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 791: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 792: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 793: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 794: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 795: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 796: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 797: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 798: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 799: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 800: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 801: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 802: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 803: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 804: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 805: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 806: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 807: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 808: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 809: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 810: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 811: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 812: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 813: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 814: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 815: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 816: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 817: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 818: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 819: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 820: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 821: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 822: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 823: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 824: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 825: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 826: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 827: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 828: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 829: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 830: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 831: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 832: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 833: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 834: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 835: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 836: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 837: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 838: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 839: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 840: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 841: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 842: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 843: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 844: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 845: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 846: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 847: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 848: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 849: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 850: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 851: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 852: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 853: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 854: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 855: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 856: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 857: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 858: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 859: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 860: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 861: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 862: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 863: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 864: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 865: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 866: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 867: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 868: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 869: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 870: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 871: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 872: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 873: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 874: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 875: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 876: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 877: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 878: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 879: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 880: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 881: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 882: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 883: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 884: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 885: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 886: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 887: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 888: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 889: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 890: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 891: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 892: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 893: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 894: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 895: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 896: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 897: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 898: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 899: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 900: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 901: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 902: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 903: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 904: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 905: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 906: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 907: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 908: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 909: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 910: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 911: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 912: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 913: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 914: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 915: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 916: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 917: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 918: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 919: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 920: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 921: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 922: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 923: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 924: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 925: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 926: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 927: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 928: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 929: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 930: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 931: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 932: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 933: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 934: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 935: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 936: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 937: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 938: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 939: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 940: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 941: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 942: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 943: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 944: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 945: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 946: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 947: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 948: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 949: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 950: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 951: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 952: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 953: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 954: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 955: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 956: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 957: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 958: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 959: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 960: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 961: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 962: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 963: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 964: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 965: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 966: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 967: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 968: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 969: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 970: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 971: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 972: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 973: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 974: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 975: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ ( ¬ Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 976: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 977: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 978: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111
solution 979: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(( ¬ Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ (¬Male) ⊔ (¬Person))))
	 coverage_score: 0.058823529411764705
	 f_measure: 0.1111111111111111

Total solutions found: 979

Program finished.
Program ends at: 09.04.2018  04.30.56 AM
Program duration: 0.222 sec
