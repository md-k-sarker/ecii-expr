Program started.............
Program starts at: 09.04.2018  04.30.54 AM
Working with confFile: Father.config
Algorithm starts at: 09.04.2018  04.30.54 AM

User defined parameters:
K1/negExprTypeLimit: 3
K2/hornClauseLimit: 3
K3/objPropsCombinationLimit: 3
K4/hornClausesListMaxSize: 50
K5/candidateClassesListMaxSize: 50
ReasonerName: pellet
posIndivs from conf:
	Francesco
	Giggino
	Mauro
	Dino
negIndivs from conf:
	Valentina
	Marisella
	Ombretta
	Luca
	NonnaLina
	Giovanna
	Carmela
	Nella
	Luigi
	Maria
	Miriam
	Serena

Algorithm ends at: 09.04.2018  04.30.54 AM

Algorithm duration: 0.147 sec

####################Solutions####################:
solution 1: ((Person) ⊔ ( ¬ Female))
	solution from reasoner: Person ⊔ (¬Female)
	 coverage_score: 0.875
	 coverage_score_by_reasoner: 1.0
	 f_measure: 0.8
	 f_measure_by_reasoner: 1.0
solution 2: ((Male) ⊔ ( ¬ Female))
	solution from reasoner: Male ⊔ (¬Female)
	 coverage_score: 0.875
	 coverage_score_by_reasoner: 0.375
	 f_measure: 0.8
	 f_measure_by_reasoner: 0.4444444444444445
solution 3: (( ¬ Female) ⊔ (Person ⊓ ¬ Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊔ (¬Female)
	 coverage_score: 0.875
	 coverage_score_by_reasoner: 0.0
	 f_measure: 0.8
	 f_measure_by_reasoner: 0.0
solution 4: (( ¬ Female) ⊔ (Person) ⊔ (Male))
	solution from reasoner: Male ⊔ Person ⊔ (¬Female)
	 coverage_score: 0.875
	 coverage_score_by_reasoner: 1.0
	 f_measure: 0.8
	 f_measure_by_reasoner: 1.0
solution 5: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female))
	solution from reasoner: Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)
	 coverage_score: 0.875
	 f_measure: 0.8
solution 6: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female))
	solution from reasoner: Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)
	 coverage_score: 0.875
	 f_measure: 0.8
solution 7: ( ¬ Female)
	solution from reasoner: ¬Female
	 coverage_score: 0.625
	 f_measure: 0.0
solution 8: (Person)
	solution from reasoner: Person
	 coverage_score: 0.25
	 f_measure: 0.4
solution 9: ∃hasChild.(Person)
	solution from reasoner: ∃ hasChild.Person
	 coverage_score: 0.25
	 f_measure: 0.4
solution 10: (Male)
	solution from reasoner: Male
	 coverage_score: 0.25
	 f_measure: 0.4
solution 11: ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: ∃ hasChild.(Female ⊔ Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 12: (Person ⊓ ¬ Female)
	solution from reasoner: Person ⊓ (¬Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 13: ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: ∃ hasChild.(Male ⊔ Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 14: (Male) ⊓ ∃hasChild.(Person)
	solution from reasoner: Male ⊓ (∃ hasChild.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 15: ((Person) ⊔ (Male))
	solution from reasoner: Male ⊔ Person
	 coverage_score: 0.25
	 f_measure: 0.4
solution 16: ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: ∃ hasChild.(Female ⊔ Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 17: (Person) ⊓ ∃hasChild.(Person)
	solution from reasoner: Person ⊓ (∃ hasChild.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 18: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 19: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: Male ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 20: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: Person ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 21: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: Male ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 22: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 23: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: ∃ hasChild.(Female ⊔ Male ⊔ Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 24: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 25: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: Person ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 26: ((Male) ⊔ (Person ⊓ ¬ Female))
	solution from reasoner: Male ⊔ (Person ⊓ (¬Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 27: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 28: ((Person) ⊔ (Person ⊓ ¬ Female))
	solution from reasoner: Person ⊔ (Person ⊓ (¬Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 29: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: Person ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 30: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: Male ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 31: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 32: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 33: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 34: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 35: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: Male ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 36: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 37: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 38: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 39: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female))
	solution from reasoner: Male ⊔ Person ⊔ (Person ⊓ (¬Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 40: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 41: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: Person ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 42: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 43: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 44: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 45: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 46: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 47: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 48: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 49: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 50: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 51: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 52: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 53: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 54: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 55: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 56: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 57: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 58: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 59: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 60: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 61: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 62: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 63: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 64: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 65: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 66: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 67: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 68: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 69: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 70: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 71: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 72: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 73: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 74: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 75: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 76: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 77: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 78: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 79: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 80: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 81: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 82: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 83: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 84: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 85: ∃hasChild.(Female)
	solution from reasoner: ∃ hasChild.Female
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 86: ∃hasSibling.(Person)
	solution from reasoner: ∃ hasSibling.Person
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 87: ∃hasChild.(Person) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 88: ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: ∃ hasSibling.(Female ⊔ Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 89: (Male) ⊓ ∃hasChild.(Female)
	solution from reasoner: Male ⊓ (∃ hasChild.Female)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 90: (Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Male ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 91: (Person) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Person ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 92: ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: ∃ hasSibling.(Female ⊔ Male)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 93: (Person) ⊓ ∃hasChild.(Female)
	solution from reasoner: Person ⊓ (∃ hasChild.Female)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 94: ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: ∃ hasSibling.(Male ⊔ Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 95: ∃hasChild.(Female) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 96: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 97: ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 98: ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 99: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 100: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Person ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 101: (Person) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 102: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 103: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 104: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 105: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 106: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 107: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: ∃ hasSibling.(Female ⊔ Male ⊔ Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 108: ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 109: (Person) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 110: ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 111: (Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Male ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 112: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 113: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 114: ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 115: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 116: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 117: (Male) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 118: (Male) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 119: ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 120: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 121: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 122: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 123: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 124: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 125: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 126: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 127: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 128: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 129: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 130: (Male) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 131: (Person) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 132: ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 133: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 134: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 135: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 136: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 137: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 138: (Male) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 139: (Male) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 140: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 141: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 142: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 143: (Person) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 144: (Male) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 145: (Person) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 146: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 147: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 148: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 149: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 150: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 151: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 152: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 153: (Male) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 154: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 155: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 156: (Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Male ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 157: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 158: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 159: (Person) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 160: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 161: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 162: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 163: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 164: (Person) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 165: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 166: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 167: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 168: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Person ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 169: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 170: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 171: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 172: (Male) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 173: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 174: ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 175: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 176: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 177: (Person) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 178: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 179: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 180: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 181: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 182: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 183: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 184: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 185: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 186: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 187: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 188: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 189: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 190: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 191: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 192: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 193: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 194: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 195: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 196: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 197: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 198: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 199: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 200: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 201: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 202: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 203: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 204: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 205: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 206: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 207: (Person) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 208: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 209: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 210: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 211: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 212: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 213: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 214: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 215: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 216: (Person) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 217: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 218: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 219: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 220: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 221: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 222: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 223: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 224: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 225: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 226: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 227: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 228: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 229: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 230: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 231: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 232: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 233: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 234: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 235: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 236: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 237: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 238: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 239: (Male) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 240: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 241: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 242: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 243: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 244: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 245: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 246: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 247: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 248: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 249: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 250: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 251: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 252: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 253: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 254: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 255: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 256: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 257: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 258: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 259: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 260: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 261: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 262: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 263: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.Female)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 264: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 265: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 266: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 267: (Male) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 268: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 269: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 270: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 271: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 272: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 273: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 274: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 275: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 276: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 277: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 278: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 279: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 280: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 281: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 282: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 283: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 284: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 285: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 286: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 287: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 288: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 289: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 290: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 291: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 292: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 293: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 294: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 295: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 296: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 297: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 298: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 299: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 300: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 301: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 302: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 303: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 304: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 305: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 306: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 307: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 308: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 309: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 310: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 311: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 312: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 313: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 314: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 315: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 316: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 317: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 318: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 319: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 320: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 321: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 322: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 323: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 324: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 325: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 326: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 327: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 328: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 329: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 330: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 331: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 332: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 333: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 334: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 335: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 336: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 337: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 338: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 339: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 340: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 341: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 342: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 343: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 344: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 345: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 346: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 347: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 348: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 349: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 350: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 351: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 352: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 353: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 354: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 355: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 356: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 357: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 358: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 359: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 360: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 361: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 362: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 363: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 364: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 365: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 366: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 367: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 368: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 369: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 370: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 371: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 372: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 373: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 374: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 375: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 376: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 377: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 378: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 379: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 380: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 381: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 382: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 383: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 384: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 385: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 386: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 387: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 388: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 389: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 390: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 391: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 392: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 393: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 394: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 395: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 396: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 397: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 398: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 399: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 400: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 401: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 402: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 403: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 404: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 405: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 406: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 407: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 408: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 409: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 410: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 411: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 412: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 413: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 414: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 415: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 416: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 417: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 418: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 419: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 420: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 421: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 422: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 423: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 424: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 425: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 426: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 427: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 428: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 429: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 430: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 431: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 432: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 433: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 434: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 435: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 436: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 437: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 438: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 439: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 440: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 441: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 442: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 443: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 444: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 445: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 446: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 447: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 448: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 449: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 450: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 451: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 452: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 453: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 454: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 455: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 456: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 457: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 458: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 459: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 460: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 461: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 462: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 463: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 464: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 465: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 466: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 467: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 468: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 469: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 470: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 471: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 472: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 473: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 474: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 475: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 476: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 477: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 478: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 479: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 480: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 481: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 482: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 483: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 484: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 485: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 486: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 487: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 488: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 489: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 490: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 491: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 492: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 493: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 494: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 495: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 496: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 497: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 498: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 499: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 500: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 501: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 502: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 503: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 504: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 505: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 506: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 507: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 508: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 509: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 510: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 511: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 512: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 513: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 514: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 515: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 516: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 517: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 518: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 519: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 520: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 521: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 522: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 523: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 524: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 525: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 526: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 527: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 528: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 529: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 530: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 531: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 532: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 533: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 534: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 535: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 536: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 537: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 538: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 539: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 540: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 541: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 542: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 543: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 544: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 545: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 546: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 547: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 548: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 549: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 550: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 551: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 552: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 553: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 554: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 555: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 556: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 557: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 558: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 559: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 560: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 561: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 562: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 563: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 564: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 565: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 566: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 567: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 568: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 569: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 570: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 571: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 572: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 573: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 574: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 575: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 576: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 577: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 578: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 579: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 580: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 581: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 582: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 583: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 584: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 585: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 586: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 587: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 588: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.1875
	 f_measure: 0.31578947368421056
solution 589: ∃hasChild.(Male)
	solution from reasoner: ∃ hasChild.Male
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 590: ∃hasSibling.(Male)
	solution from reasoner: ∃ hasSibling.Male
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 591: ∃hasSibling.(Female)
	solution from reasoner: ∃ hasSibling.Female
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 592: ∃hasParent.(Male)
	solution from reasoner: ∃ hasParent.Male
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 593: ∃hasParent.(Female)
	solution from reasoner: ∃ hasParent.Female
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 594: ∃hasParent.(Person)
	solution from reasoner: ∃ hasParent.Person
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 595: ∃hasChild.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 596: (Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ (∃ hasParent.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 597: (Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 598: ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 599: (Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 600: (Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ (∃ hasParent.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 601: (Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ (∃ hasParent.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 602: ∃hasChild.(Female) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 603: ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ∃ hasParent.(Female ⊔ Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 604: (Person) ⊓ ∃hasSibling.(Male)
	solution from reasoner: Person ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 605: ∃hasChild.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 606: (Person) ⊓ ∃hasChild.(Male)
	solution from reasoner: Person ⊓ (∃ hasChild.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 607: ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 608: ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ∃ hasParent.(Male ⊔ Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 609: (Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ (∃ hasParent.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 610: ∃hasChild.(Person) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 611: ∃hasChild.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 612: ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 613: ∃hasChild.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 614: ∃hasChild.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 615: ∃hasChild.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 616: (Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ (∃ hasParent.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 617: ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 618: ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ∃ hasParent.(Female ⊔ Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 619: (Male) ⊓ ∃hasChild.(Male)
	solution from reasoner: Male ⊓ (∃ hasChild.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 620: ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 621: (Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ (∃ hasParent.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 622: (Male) ⊓ ∃hasSibling.(Male)
	solution from reasoner: Male ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 623: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 624: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 625: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 626: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 627: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 628: (Person) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 629: (Person) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 630: ∃hasChild.(Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 631: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 632: ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 633: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 634: ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 635: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 636: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 637: ((Person) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 638: ∃hasChild.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 639: ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 640: (Person) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 641: (Male) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Male)
	solution from reasoner: Male ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 642: ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ∃ hasParent.(Female ⊔ Male ⊔ Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 643: (Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 644: ∃hasChild.(Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 645: ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 646: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 647: (Male) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 648: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 649: (Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 650: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 651: (Person) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 652: (Person ⊓ ¬ Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 653: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 654: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 655: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 656: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 657: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 658: (Male) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Male)
	solution from reasoner: Male ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 659: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 660: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 661: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 662: ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 663: ∃hasChild.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 664: (Male) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 665: (Male) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 666: ∃hasChild.(Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 667: ∃hasChild.(Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 668: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 669: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 670: (Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 671: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 672: (Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 673: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 674: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 675: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 676: (Person ⊓ ¬ Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 677: ((Person) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 678: (Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 679: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 680: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 681: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 682: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 683: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 684: (Male) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 685: ∃hasChild.(Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 686: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 687: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 688: (Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 689: (Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 690: (Male) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 691: (Person) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 692: (Male) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 693: (Person) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Male)
	solution from reasoner: Person ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 694: (Male) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 695: ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 696: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 697: (Person) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Male)
	solution from reasoner: Person ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 698: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 699: (Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 700: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 701: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 702: ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 703: (Person) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 704: (Person ⊓ ¬ Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 705: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 706: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 707: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 708: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 709: (Person) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 710: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 711: ∃hasChild.(Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 712: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 713: (Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 714: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 715: ((Person) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 716: (Male) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 717: (Person) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 718: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 719: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 720: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 721: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 722: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 723: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 724: (Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 725: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 726: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 727: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 728: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 729: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 730: ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 731: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 732: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 733: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 734: (Male) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 735: (Male) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 736: (Person) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 737: (Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 738: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 739: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 740: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 741: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 742: (Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 743: (Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 744: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 745: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 746: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 747: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 748: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 749: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 750: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 751: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 752: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 753: ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 754: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 755: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 756: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 757: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 758: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 759: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 760: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 761: ((Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 762: (Person ⊓ ¬ Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 763: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 764: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 765: ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 766: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 767: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 768: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 769: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 770: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 771: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 772: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 773: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 774: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 775: ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 776: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 777: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 778: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 779: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 780: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 781: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 782: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 783: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 784: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 785: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 786: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 787: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 788: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 789: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 790: ((Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 791: (Person) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 792: (Male) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 793: (Person) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 794: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 795: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 796: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 797: (Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 798: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 799: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 800: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 801: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 802: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 803: ∃hasChild.(Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 804: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 805: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 806: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 807: ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 808: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 809: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 810: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 811: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 812: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 813: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 814: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 815: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 816: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 817: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 818: (Person) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 819: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 820: ∃hasChild.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 821: ((Person) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 822: ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 823: ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 824: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 825: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 826: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 827: ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 828: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 829: ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 830: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 831: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 832: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 833: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 834: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 835: (Person) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 836: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 837: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 838: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 839: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 840: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 841: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 842: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 843: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 844: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 845: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 846: (Male) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 847: ∃hasChild.(Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 848: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 849: (Person) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 850: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 851: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 852: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 853: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 854: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 855: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 856: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 857: ∃hasChild.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 858: ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 859: ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 860: ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 861: ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 862: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 863: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 864: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 865: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 866: ∃hasChild.(Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 867: ∃hasChild.(Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 868: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 869: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 870: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 871: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 872: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 873: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 874: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 875: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 876: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 877: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 878: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 879: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 880: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 881: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 882: (Person ⊓ ¬ Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 883: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 884: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 885: ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 886: ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 887: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 888: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 889: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 890: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 891: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 892: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 893: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 894: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 895: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 896: (Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 897: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 898: (Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 899: ∃hasChild.(Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 900: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 901: (Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 902: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 903: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 904: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 905: (Male) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 906: (Male) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 907: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 908: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 909: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 910: ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 911: ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 912: ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 913: ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 914: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 915: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 916: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 917: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 918: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 919: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 920: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 921: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 922: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 923: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 924: ∃hasChild.(Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 925: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 926: (Person ⊓ ¬ Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 927: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 928: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 929: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 930: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 931: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 932: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 933: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 934: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 935: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 936: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 937: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 938: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 939: ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 940: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 941: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 942: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 943: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 944: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 945: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 946: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 947: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 948: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 949: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 950: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 951: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 952: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 953: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 954: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 955: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 956: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 957: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 958: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 959: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 960: ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 961: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 962: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 963: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 964: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 965: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 966: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 967: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 968: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 969: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 970: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 971: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 972: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 973: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 974: (Person ⊓ ¬ Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 975: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 976: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 977: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 978: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 979: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 980: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 981: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 982: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 983: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 984: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 985: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 986: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 987: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 988: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 989: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 990: ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 991: ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 992: ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 993: ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 994: ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 995: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 996: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 997: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 998: ∃hasChild.(Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 999: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1000: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1001: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1002: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1003: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1004: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1005: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1006: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1007: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1008: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1009: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1010: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1011: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1012: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1013: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1014: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1015: (Male) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1016: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1017: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1018: (Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1019: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1020: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1021: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1022: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1023: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1024: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1025: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1026: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1027: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1028: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1029: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1030: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1031: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1032: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1033: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1034: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1035: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1036: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1037: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1038: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1039: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1040: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1041: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1042: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1043: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1044: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1045: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1046: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1047: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1048: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1049: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1050: ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1051: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1052: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1053: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1054: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1055: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1056: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1057: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1058: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1059: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1060: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1061: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1062: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1063: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1064: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1065: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1066: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1067: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1068: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1069: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1070: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1071: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1072: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1073: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1074: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1075: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1076: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1077: ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1078: ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1079: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1080: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1081: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1082: (Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1083: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1084: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1085: ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1086: ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1087: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1088: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1089: (Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1090: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1091: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1092: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1093: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1094: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1095: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1096: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1097: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1098: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1099: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1100: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1101: (Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1102: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1103: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1104: (Male) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1105: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1106: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1107: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1108: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1109: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1110: ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1111: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1112: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1113: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1114: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1115: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1116: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1117: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1118: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1119: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1120: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1121: ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1122: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1123: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1124: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1125: (Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1126: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1127: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1128: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1129: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1130: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1131: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1132: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1133: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1134: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1135: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1136: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1137: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1138: (Person) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1139: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1140: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1141: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1142: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1143: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1144: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1145: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1146: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1147: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1148: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1149: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1150: ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1151: ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1152: ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1153: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1154: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1155: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1156: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1157: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1158: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1159: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1160: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1161: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1162: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1163: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1164: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1165: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1166: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1167: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1168: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1169: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1170: ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1171: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1172: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1173: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1174: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1175: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1176: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1177: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1178: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1179: ((Person) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1180: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1181: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1182: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1183: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1184: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1185: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1186: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1187: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1188: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1189: (Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1190: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1191: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1192: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1193: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1194: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1195: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1196: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1197: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1198: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1199: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1200: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1201: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1202: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1203: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1204: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1205: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1206: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1207: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1208: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1209: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1210: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1211: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1212: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1213: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1214: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1215: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1216: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1217: ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1218: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1219: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1220: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1221: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1222: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1223: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1224: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1225: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1226: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1227: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1228: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1229: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1230: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1231: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1232: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1233: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1234: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1235: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1236: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1237: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1238: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1239: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1240: ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1241: ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1242: ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1243: ∃hasChild.(Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1244: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1245: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1246: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1247: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1248: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1249: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1250: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1251: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1252: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1253: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1254: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1255: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1256: ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1257: ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1258: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1259: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1260: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1261: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1262: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1263: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1264: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1265: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1266: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1267: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1268: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1269: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1270: (Person) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1271: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1272: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1273: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1274: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1275: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1276: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1277: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1278: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1279: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1280: (Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1281: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1282: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1283: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1284: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1285: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1286: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1287: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1288: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1289: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1290: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1291: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1292: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1293: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1294: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1295: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1296: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1297: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1298: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1299: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1300: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1301: (Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1302: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1303: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1304: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1305: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1306: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1307: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1308: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1309: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1310: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1311: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1312: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1313: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1314: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1315: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1316: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1317: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1318: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1319: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1320: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1321: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1322: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1323: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1324: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1325: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1326: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1327: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1328: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1329: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1330: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1331: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1332: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1333: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1334: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1335: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1336: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1337: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1338: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1339: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1340: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1341: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1342: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1343: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1344: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1345: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1346: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1347: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1348: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1349: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1350: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1351: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1352: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1353: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1354: (Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1355: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1356: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1357: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1358: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1359: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1360: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1361: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1362: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1363: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1364: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1365: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1366: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1367: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1368: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1369: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1370: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1371: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1372: ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1373: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1374: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1375: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1376: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1377: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1378: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1379: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1380: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1381: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1382: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1383: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1384: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1385: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1386: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1387: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1388: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1389: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1390: (Male) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1391: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1392: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1393: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1394: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1395: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1396: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1397: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1398: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1399: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1400: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1401: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1402: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1403: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1404: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1405: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1406: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1407: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1408: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1409: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1410: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1411: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1412: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1413: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1414: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1415: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1416: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1417: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1418: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1419: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1420: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1421: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1422: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1423: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1424: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1425: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1426: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1427: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1428: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1429: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1430: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1431: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1432: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1433: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1434: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1435: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1436: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1437: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1438: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1439: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1440: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1441: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1442: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1443: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1444: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1445: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1446: ∃hasChild.(Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1447: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1448: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1449: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1450: (Person) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1451: (Male) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1452: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1453: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1454: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1455: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1456: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1457: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1458: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1459: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1460: ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1461: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1462: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1463: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1464: ∃hasChild.(Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1465: ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1466: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1467: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1468: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1469: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1470: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1471: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1472: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1473: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1474: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1475: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1476: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1477: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1478: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1479: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1480: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1481: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1482: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1483: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1484: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1485: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1486: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1487: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1488: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1489: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1490: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1491: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1492: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1493: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1494: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1495: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1496: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1497: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1498: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1499: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1500: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1501: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1502: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1503: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1504: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1505: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1506: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1507: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1508: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1509: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1510: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1511: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1512: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1513: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1514: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1515: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1516: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1517: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1518: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1519: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1520: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1521: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1522: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1523: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1524: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1525: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1526: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1527: (Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1528: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1529: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1530: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1531: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1532: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1533: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1534: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1535: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1536: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1537: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1538: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1539: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1540: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1541: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1542: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1543: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1544: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1545: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1546: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1547: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1548: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1549: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1550: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1551: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1552: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1553: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1554: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1555: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1556: ∃hasChild.(Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1557: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1558: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1559: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1560: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1561: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1562: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1563: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1564: ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1565: (Person) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1566: ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1567: ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1568: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1569: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1570: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1571: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1572: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1573: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1574: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1575: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1576: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1577: ∃hasChild.(Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1578: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1579: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1580: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1581: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1582: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1583: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1584: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1585: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1586: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1587: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1588: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1589: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1590: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1591: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1592: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1593: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1594: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1595: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1596: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1597: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1598: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1599: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1600: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1601: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1602: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1603: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1604: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1605: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1606: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1607: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1608: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1609: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1610: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1611: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1612: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1613: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1614: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1615: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1616: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1617: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1618: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1619: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1620: (Person) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1621: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1622: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1623: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1624: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1625: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1626: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1627: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1628: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1629: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1630: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1631: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1632: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1633: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1634: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1635: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1636: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1637: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1638: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1639: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1640: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1641: (Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1642: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1643: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1644: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1645: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1646: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1647: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1648: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1649: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1650: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1651: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1652: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1653: ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1654: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1655: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1656: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1657: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1658: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1659: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1660: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1661: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1662: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1663: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1664: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1665: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1666: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1667: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1668: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1669: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1670: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1671: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1672: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1673: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1674: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1675: (Male) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1676: ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1677: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1678: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1679: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1680: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1681: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1682: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1683: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1684: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1685: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1686: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1687: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1688: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1689: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1690: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1691: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1692: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1693: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1694: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1695: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1696: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1697: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1698: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1699: (Male) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1700: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1701: ∃hasChild.(Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1702: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1703: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1704: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1705: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1706: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1707: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1708: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1709: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1710: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1711: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1712: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1713: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1714: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1715: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1716: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1717: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1718: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1719: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1720: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1721: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1722: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1723: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1724: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1725: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1726: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1727: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1728: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1729: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1730: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1731: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1732: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1733: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1734: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1735: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1736: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1737: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1738: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1739: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1740: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1741: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1742: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1743: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1744: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1745: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1746: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1747: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1748: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1749: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1750: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1751: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1752: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1753: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1754: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1755: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1756: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1757: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1758: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1759: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1760: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1761: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1762: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1763: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1764: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1765: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1766: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1767: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1768: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1769: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1770: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1771: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1772: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1773: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1774: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1775: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1776: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1777: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1778: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1779: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1780: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1781: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1782: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1783: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1784: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1785: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1786: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1787: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1788: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1789: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1790: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1791: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1792: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1793: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1794: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1795: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1796: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1797: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1798: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1799: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1800: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1801: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1802: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1803: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1804: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1805: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1806: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1807: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1808: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1809: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1810: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1811: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1812: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1813: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1814: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1815: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1816: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1817: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1818: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1819: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1820: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1821: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1822: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1823: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1824: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1825: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1826: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1827: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1828: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1829: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1830: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1831: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1832: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1833: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1834: (Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1835: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1836: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1837: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1838: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1839: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1840: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1841: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1842: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1843: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1844: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1845: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1846: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1847: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1848: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1849: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1850: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1851: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1852: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1853: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1854: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1855: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1856: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1857: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1858: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1859: (Person) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1860: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1861: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1862: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1863: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1864: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1865: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1866: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1867: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1868: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1869: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1870: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1871: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1872: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1873: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1874: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1875: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1876: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1877: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1878: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1879: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1880: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1881: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1882: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1883: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1884: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1885: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1886: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1887: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1888: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1889: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1890: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1891: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1892: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1893: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1894: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1895: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1896: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1897: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1898: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1899: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1900: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1901: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1902: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1903: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1904: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1905: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1906: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1907: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1908: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1909: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1910: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1911: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1912: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1913: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1914: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1915: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1916: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1917: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1918: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1919: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1920: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1921: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1922: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1923: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1924: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1925: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1926: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1927: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1928: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1929: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1930: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1931: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1932: ∃hasChild.(Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1933: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1934: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1935: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1936: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1937: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1938: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1939: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1940: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1941: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1942: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1943: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1944: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1945: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1946: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1947: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1948: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1949: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1950: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1951: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1952: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1953: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1954: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1955: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1956: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1957: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1958: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1959: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1960: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1961: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1962: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1963: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1964: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1965: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1966: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1967: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1968: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1969: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1970: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1971: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1972: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1973: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1974: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1975: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1976: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1977: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1978: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1979: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1980: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1981: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1982: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1983: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1984: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1985: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1986: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1987: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1988: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1989: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1990: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1991: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1992: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1993: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1994: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1995: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1996: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1997: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1998: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 1999: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2000: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2001: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2002: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2003: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2004: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2005: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2006: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2007: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2008: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2009: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2010: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2011: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2012: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2013: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2014: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2015: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2016: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2017: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2018: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2019: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2020: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2021: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2022: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2023: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2024: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2025: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2026: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2027: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2028: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2029: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2030: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2031: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2032: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2033: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2034: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2035: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2036: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2037: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2038: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2039: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2040: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2041: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2042: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2043: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2044: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2045: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2046: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2047: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2048: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2049: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2050: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2051: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2052: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2053: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2054: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2055: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2056: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2057: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2058: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2059: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2060: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2061: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2062: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2063: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2064: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2065: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2066: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2067: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2068: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2069: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2070: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2071: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2072: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2073: (Person ⊓ ¬ Female) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2074: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2075: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2076: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2077: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2078: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2079: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2080: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2081: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2082: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2083: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2084: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2085: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2086: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2087: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2088: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2089: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2090: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2091: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2092: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2093: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2094: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2095: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2096: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2097: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2098: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2099: ((Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2100: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2101: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2102: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2103: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2104: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2105: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2106: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2107: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2108: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2109: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2110: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2111: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2112: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2113: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2114: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2115: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2116: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2117: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2118: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2119: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2120: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2121: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2122: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2123: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2124: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2125: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2126: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2127: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2128: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2129: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2130: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2131: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2132: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2133: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2134: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2135: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2136: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2137: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2138: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2139: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2140: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2141: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2142: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2143: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2144: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2145: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2146: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2147: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2148: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2149: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2150: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2151: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2152: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2153: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2154: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2155: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2156: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2157: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2158: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2159: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2160: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2161: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2162: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2163: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2164: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2165: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2166: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2167: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2168: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2169: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2170: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2171: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2172: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2173: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2174: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2175: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2176: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2177: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2178: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2179: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2180: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2181: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2182: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2183: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2184: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.22222222222222224
solution 2185: ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2186: ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2187: ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2188: ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2189: ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2190: ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2191: ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2192: ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2193: ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Person)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2194: ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2195: ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2196: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2197: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2198: ∃hasChild.(Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2199: ∃hasChild.(Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2200: ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2201: ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2202: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2203: ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2204: (Male) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2205: (Male) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2206: (Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2207: ∃hasChild.(Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2208: ∃hasChild.(Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2209: (Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2210: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2211: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2212: ∃hasChild.(Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2213: (Male) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2214: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2215: ∃hasChild.(Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2216: ∃hasChild.(Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2217: ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2218: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2219: (Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2220: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2221: ∃hasChild.(Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2222: ∃hasChild.(Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2223: ∃hasChild.(Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2224: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2225: ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2226: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2227: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2228: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2229: ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2230: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2231: ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2232: ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2233: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2234: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2235: ∃hasChild.(Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2236: ∃hasChild.(Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2237: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2238: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2239: ∃hasChild.(Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2240: ∃hasChild.(Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2241: ∃hasChild.(Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2242: ∃hasChild.(Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2243: ∃hasChild.(Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2244: ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2245: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2246: ∃hasChild.(Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2247: ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2248: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2249: ∃hasChild.(Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2250: ∃hasChild.(Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2251: ∃hasChild.(Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2252: ∃hasChild.(Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2253: ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2254: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2255: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2256: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2257: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2258: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2259: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2260: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2261: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2262: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2263: ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2264: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2265: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2266: ∃hasChild.(Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2267: ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2268: ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2269: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2270: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2271: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2272: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2273: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2274: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2275: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2276: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2277: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2278: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2279: ∃hasChild.(Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2280: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2281: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2282: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2283: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2284: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2285: (Male) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2286: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2287: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2288: ∃hasChild.(Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2289: ∃hasChild.(Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2290: ∃hasChild.(Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2291: ∃hasChild.(Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2292: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2293: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2294: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2295: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2296: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2297: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2298: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2299: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2300: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2301: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2302: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2303: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2304: ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2305: ∃hasChild.(Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2306: ∃hasChild.(Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2307: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2308: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2309: ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2310: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2311: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2312: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2313: (Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2314: (Male) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2315: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2316: ∃hasChild.(Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2317: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2318: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2319: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2320: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2321: ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2322: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2323: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2324: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2325: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2326: ∃hasChild.(Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2327: ∃hasChild.(Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2328: ∃hasChild.(Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2329: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2330: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2331: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2332: ∃hasChild.(Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2333: ∃hasChild.(Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2334: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2335: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2336: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2337: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2338: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2339: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2340: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2341: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2342: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2343: (Male) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2344: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2345: (Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2346: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2347: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2348: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2349: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2350: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2351: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2352: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2353: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2354: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2355: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2356: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2357: (Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2358: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2359: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2360: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2361: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2362: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2363: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2364: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2365: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2366: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2367: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2368: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2369: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2370: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2371: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2372: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2373: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2374: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2375: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2376: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2377: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2378: (Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2379: ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2380: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2381: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2382: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2383: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2384: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2385: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2386: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2387: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2388: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2389: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2390: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2391: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2392: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2393: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2394: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2395: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2396: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2397: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2398: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2399: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2400: ∃hasChild.(Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2401: ∃hasChild.(Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2402: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2403: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2404: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2405: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2406: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2407: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2408: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2409: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2410: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2411: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2412: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2413: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2414: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2415: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2416: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2417: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2418: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2419: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2420: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2421: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2422: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2423: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2424: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2425: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2426: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2427: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2428: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2429: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2430: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2431: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2432: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2433: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2434: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2435: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2436: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2437: ∃hasChild.(Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2438: ∃hasChild.(Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2439: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2440: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2441: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2442: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2443: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2444: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2445: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2446: ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2447: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2448: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2449: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2450: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2451: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2452: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2453: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2454: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2455: ∃hasChild.(Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Female) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2456: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2457: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2458: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2459: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2460: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2461: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2462: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2463: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2464: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2465: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2466: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2467: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2468: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2469: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2470: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2471: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2472: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2473: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2474: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2475: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2476: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2477: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2478: ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2479: ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2480: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2481: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2482: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2483: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2484: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2485: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2486: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2487: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2488: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2489: ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2490: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2491: ∃hasChild.(Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Person) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2492: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2493: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2494: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2495: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2496: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2497: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2498: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2499: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2500: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2501: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2502: ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2503: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2504: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2505: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2506: (Male) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2507: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2508: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2509: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2510: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2511: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2512: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2513: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2514: ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2515: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2516: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2517: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2518: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2519: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2520: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2521: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2522: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2523: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2524: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2525: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2526: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2527: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2528: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2529: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2530: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2531: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2532: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2533: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2534: ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2535: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2536: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2537: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2538: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2539: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2540: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2541: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2542: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2543: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2544: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2545: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2546: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2547: ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2548: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2549: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2550: (Person ⊓ ¬ Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2551: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2552: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2553: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2554: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2555: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2556: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2557: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2558: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2559: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2560: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2561: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2562: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2563: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2564: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2565: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2566: ∃hasChild.((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2567: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2568: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2569: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2570: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2571: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2572: ∃hasChild.((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2573: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2574: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2575: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2576: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2577: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2578: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2579: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2580: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2581: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2582: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2583: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2584: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2585: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2586: ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2587: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2588: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2589: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2590: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2591: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2592: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2593: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2594: ((Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2595: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2596: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2597: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2598: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2599: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2600: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2601: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2602: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2603: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2604: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2605: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2606: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2607: ∃hasChild.((Person) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2608: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2609: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2610: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2611: ((Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2612: (Person ⊓ ¬ Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2613: ((Person) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2614: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2615: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2616: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2617: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2618: ((Male) ⊔ ( ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2619: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2620: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2621: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2622: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2623: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2624: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2625: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2626: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2627: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2628: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2629: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2630: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2631: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2632: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2633: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2634: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2635: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2636: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2637: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2638: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2639: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2640: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2641: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2642: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2643: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2644: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2645: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2646: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2647: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2648: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2649: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2650: ∃hasChild.((Female) ⊔ (Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2651: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2652: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2653: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2654: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2655: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2656: ((Person) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2657: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2658: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2659: ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2660: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2661: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2662: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2663: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2664: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2665: (( ¬ Female) ⊔ (Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2666: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2667: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2668: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2669: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2670: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2671: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2672: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2673: (( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2674: ((Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2675: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2676: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2677: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2678: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2679: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2680: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2681: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2682: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2683: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2684: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2685: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2686: ((Male) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2687: ((Person) ⊔ (Male) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person ⊔ (Person ⊓ (¬Female))) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941
solution 2688: ((Person) ⊔ ( ¬ Female) ⊔ (Person ⊓ ¬ Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Female)) ⊔ (¬Female)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.0625
	 f_measure: 0.11764705882352941

Total solutions found: 2688

Program finished.
Program ends at: 09.04.2018  04.30.54 AM
Program duration: 0.344 sec
