Program started.............
Program starts at: 09.04.2018  04.30.55 AM
Working with confFile: Daughter.config
Algorithm starts at: 09.04.2018  04.30.55 AM

User defined parameters:
K1/negExprTypeLimit: 3
K2/hornClauseLimit: 3
K3/objPropsCombinationLimit: 3
K4/hornClausesListMaxSize: 50
K5/candidateClassesListMaxSize: 50
ReasonerName: pellet
posIndivs from conf:
	Valentina
	Ombretta
	Marisella
	Giovanna
	Nella
	Serena
	Milly
	Antonella
negIndivs from conf:
	Dino
	Luigi

Algorithm ends at: 09.04.2018  04.30.56 AM

Algorithm duration: 0.105 sec

####################Solutions####################:
solution 1: (( ¬ Male) ⊔ (Female))
	solution from reasoner: Female ⊔ (¬Male)
	 coverage_score: 1.0
	 coverage_score_by_reasoner: 0.8
	 f_measure: 1.0
	 f_measure_by_reasoner: 0.888888888888889
solution 2: (( ¬ Male) ⊔ (Person))
	solution from reasoner: Person ⊔ (¬Male)
	 coverage_score: 1.0
	 coverage_score_by_reasoner: 1.0
	 f_measure: 1.0
	 f_measure_by_reasoner: 1.0
solution 3: ((Person) ⊔ ( ¬ Male) ⊔ (Female))
	solution from reasoner: Female ⊔ Person ⊔ (¬Male)
	 coverage_score: 1.0
	 coverage_score_by_reasoner: 1.0
	 f_measure: 1.0
	 f_measure_by_reasoner: 1.0
solution 4: (( ¬ Male) ⊔ (Person ⊓ ¬ Male))
	solution from reasoner: (Person ⊓ (¬Male)) ⊔ (¬Male)
	 coverage_score: 1.0
	 coverage_score_by_reasoner: 0.0
	 f_measure: 1.0
	 f_measure_by_reasoner: 0.0
solution 5: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male))
	solution from reasoner: Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)
	 coverage_score: 1.0
	 f_measure: 1.0
solution 6: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male))
	solution from reasoner: Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)
	 coverage_score: 1.0
	 f_measure: 1.0
solution 7: (Person)
	solution from reasoner: Person
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 8: ∃hasParent.(Male)
	solution from reasoner: ∃ hasParent.Male
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 9: ∃hasParent.(Female)
	solution from reasoner: ∃ hasParent.Female
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 10: ∃hasSibling.(Person)
	solution from reasoner: ∃ hasSibling.Person
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 11: ∃hasParent.(Person)
	solution from reasoner: ∃ hasParent.Person
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 12: (Female)
	solution from reasoner: Female
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 13: (Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ (∃ hasParent.Male)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 14: ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: ∃ hasSibling.(Female ⊔ Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 15: ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 16: (Female) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Female ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 17: (Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ (∃ hasParent.Female)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 18: (Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ (∃ hasParent.Male)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 19: ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ∃ hasParent.(Female ⊔ Male)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 20: ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 21: (Person) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Person ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 22: ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ∃ hasParent.(Male ⊔ Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 23: (Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ (∃ hasParent.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 24: (Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ (∃ hasParent.Female)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 25: ((Female) ⊔ (Person))
	solution from reasoner: Female ⊔ Person
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 26: ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: ∃ hasSibling.(Female ⊔ Male)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 27: (Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ (∃ hasParent.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 28: ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: ∃ hasSibling.(Male ⊔ Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 29: ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 30: ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ∃ hasParent.(Female ⊔ Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 31: (Person ⊓ ¬ Male)
	solution from reasoner: Person ⊓ (¬Male)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 32: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 33: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 34: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 35: (Person ⊓ ¬ Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 36: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 37: ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 38: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 39: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Person ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 40: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 41: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 42: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 43: ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ∃ hasParent.(Female ⊔ Male ⊔ Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 44: (Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 45: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 46: ((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 47: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 48: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 49: (Person ⊓ ¬ Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 50: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 51: ((Female) ⊔ (Person ⊓ ¬ Male))
	solution from reasoner: Female ⊔ (Person ⊓ (¬Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 52: (Person ⊓ ¬ Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 53: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 54: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 55: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: ∃ hasSibling.(Female ⊔ Male ⊔ Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 56: ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 57: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 58: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 59: (Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 60: ((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 61: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 62: (Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 63: ((Person) ⊔ (Person ⊓ ¬ Male))
	solution from reasoner: Person ⊔ (Person ⊓ (¬Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 64: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 65: (Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 66: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 67: (Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 68: (Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 69: ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 70: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 71: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 72: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 73: (Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 74: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 75: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 76: (Female) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Female ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 77: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 78: (Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 79: (Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 80: ((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 81: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 82: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 83: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 84: (Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 85: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 86: ((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 87: (Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 88: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 89: (Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 90: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 91: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 92: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 93: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 94: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 95: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 96: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 97: (Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 98: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 99: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 100: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male))
	solution from reasoner: Female ⊔ Person ⊔ (Person ⊓ (¬Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 101: ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 102: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 103: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 104: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 105: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 106: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 107: (Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 108: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 109: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 110: (Person ⊓ ¬ Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 111: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 112: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 113: ((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 114: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 115: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 116: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 117: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 118: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 119: (Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 120: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 121: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 122: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 123: (Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Female ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 124: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 125: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 126: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 127: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 128: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 129: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 130: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 131: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 132: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 133: ((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 134: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 135: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 136: (Person ⊓ ¬ Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 137: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 138: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 139: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 140: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 141: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 142: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 143: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 144: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 145: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 146: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Person ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 147: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 148: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 149: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 150: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 151: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 152: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 153: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 154: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 155: (Person ⊓ ¬ Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 156: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 157: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 158: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 159: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 160: (Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 161: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 162: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 163: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 164: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 165: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 166: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 167: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 168: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 169: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 170: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 171: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 172: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 173: (Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 174: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 175: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 176: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 177: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 178: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 179: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 180: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 181: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 182: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 183: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 184: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 185: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 186: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 187: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 188: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 189: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 190: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 191: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 192: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 193: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 194: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 195: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 196: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 197: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 198: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 199: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 200: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 201: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 202: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 203: (Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 204: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 205: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 206: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 207: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 208: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 209: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 210: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 211: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 212: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 213: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 214: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 215: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 216: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 217: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 218: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 219: (Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 220: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 221: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 222: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 223: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 224: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 225: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 226: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 227: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 228: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 229: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 230: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 231: (Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 232: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 233: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 234: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 235: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 236: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 237: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 238: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 239: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 240: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 241: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 242: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 243: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 244: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 245: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 246: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 247: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 248: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 249: (Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 250: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 251: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 252: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 253: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 254: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 255: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 256: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 257: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 258: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 259: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 260: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 261: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 262: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 263: (Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 264: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 265: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 266: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 267: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 268: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 269: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 270: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 271: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 272: ((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 273: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 274: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 275: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 276: (Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 277: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 278: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 279: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 280: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 281: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 282: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 283: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 284: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 285: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 286: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 287: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 288: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 289: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 290: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 291: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 292: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 293: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 294: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 295: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 296: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 297: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 298: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 299: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 300: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 301: (Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 302: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 303: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 304: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 305: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 306: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 307: (Person ⊓ ¬ Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 308: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 309: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 310: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 311: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 312: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 313: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 314: (Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 315: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 316: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 317: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 318: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 319: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 320: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 321: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 322: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 323: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 324: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 325: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 326: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 327: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 328: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 329: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 330: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 331: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 332: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 333: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 334: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 335: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 336: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 337: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 338: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 339: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 340: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 341: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 342: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 343: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 344: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 345: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 346: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 347: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 348: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 349: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 350: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 351: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 352: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 353: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 354: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 355: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 356: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 357: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 358: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 359: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 360: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 361: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 362: (Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 363: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 364: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 365: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 366: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 367: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 368: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 369: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 370: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 371: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 372: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 373: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 374: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 375: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 376: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 377: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 378: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 379: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 380: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 381: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 382: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 383: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 384: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 385: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 386: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 387: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 388: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 389: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 390: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 391: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 392: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 393: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 394: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 395: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 396: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 397: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 398: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 399: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 400: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 401: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 402: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 403: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 404: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 405: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 406: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 407: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 408: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 409: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 410: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 411: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 412: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 413: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 414: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 415: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 416: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 417: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 418: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 419: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 420: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 421: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 422: (Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 423: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 424: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 425: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 426: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 427: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 428: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 429: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 430: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 431: (Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 432: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 433: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 434: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 435: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 436: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 437: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 438: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 439: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 440: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 441: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 442: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 443: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 444: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 445: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 446: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 447: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 448: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 449: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 450: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 451: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 452: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 453: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 454: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 455: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 456: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 457: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 458: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 459: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 460: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 461: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 462: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 463: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 464: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 465: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 466: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 467: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 468: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 469: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 470: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 471: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 472: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 473: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 474: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 475: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 476: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 477: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 478: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 479: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 480: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 481: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 482: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 483: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 484: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 485: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 486: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 487: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 488: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 489: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 490: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 491: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 492: (Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 493: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 494: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 495: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 496: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 497: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 498: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 499: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 500: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 501: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 502: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 503: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 504: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 505: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 506: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 507: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 508: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 509: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 510: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 511: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 512: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 513: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 514: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 515: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 516: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 517: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 518: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 519: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 520: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 521: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 522: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 523: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 524: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 525: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 526: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 527: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 528: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 529: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 530: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 531: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 532: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 533: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 534: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 535: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 536: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 537: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 538: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 539: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 540: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 541: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 542: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 543: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 544: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 545: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 546: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 547: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 548: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 549: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 550: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 551: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 552: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 553: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 554: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 555: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 556: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 557: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 558: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 559: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 560: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 561: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 562: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 563: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 564: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 565: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 566: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 567: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 568: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 569: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 570: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 571: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 572: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 573: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 574: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 575: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 576: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 577: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 578: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 579: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 580: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 581: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 582: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 583: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 584: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 585: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 586: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 587: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 588: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 589: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 590: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 591: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 592: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 593: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 594: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 595: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 596: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 597: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 598: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 599: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 600: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 601: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 602: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 603: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 604: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 605: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 606: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 607: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 608: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 609: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 610: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 611: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 612: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 613: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 614: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 615: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 616: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 617: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 618: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 619: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 620: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 621: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 622: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 623: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 624: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 625: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 626: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 627: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 628: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 629: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 630: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 631: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 632: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 633: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 634: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 635: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 636: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 637: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 638: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 639: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 640: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 641: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 642: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 643: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 644: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 645: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 646: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 647: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 648: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 649: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 650: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 651: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 652: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 653: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 654: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 655: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 656: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 657: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 658: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 659: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 660: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 661: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 662: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 663: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 664: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 665: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 666: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 667: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 668: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 669: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 670: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 671: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.8
	 f_measure: 0.888888888888889
solution 672: ∃hasSibling.(Female)
	solution from reasoner: ∃ hasSibling.Female
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 673: (Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Female ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 674: ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 675: (Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 676: ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 677: ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 678: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 679: ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 680: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 681: (Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 682: (Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 683: ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 684: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 685: (Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 686: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 687: ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 688: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 689: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 690: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 691: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 692: ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 693: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 694: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 695: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 696: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 697: (Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 698: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 699: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 700: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 701: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 702: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 703: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 704: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 705: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 706: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 707: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 708: (Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 709: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 710: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 711: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 712: (Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 713: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 714: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 715: (Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 716: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 717: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 718: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 719: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 720: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 721: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 722: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 723: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 724: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 725: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 726: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 727: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 728: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 729: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 730: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 731: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 732: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 733: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 734: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 735: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 736: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 737: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 738: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 739: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 740: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 741: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 742: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 743: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 744: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 745: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 746: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 747: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 748: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 749: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 750: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 751: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 752: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 753: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 754: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 755: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 756: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 757: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 758: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 759: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 760: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 761: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 762: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 763: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 764: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 765: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 766: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 767: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 768: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 769: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 770: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 771: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 772: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 773: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 774: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 775: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 776: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 777: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 778: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 779: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 780: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 781: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 782: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 783: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.7
	 f_measure: 0.823529411764706
solution 784: ∃hasSibling.(Male)
	solution from reasoner: ∃ hasSibling.Male
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 785: (Female) ⊓ ∃hasSibling.(Male)
	solution from reasoner: Female ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 786: ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 787: ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 788: (Person) ⊓ ∃hasSibling.(Male)
	solution from reasoner: Person ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 789: ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 790: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 791: (Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 792: (Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 793: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 794: (Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 795: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 796: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 797: ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 798: ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 799: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 800: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 801: ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 802: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 803: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 804: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 805: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 806: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 807: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 808: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 809: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 810: ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 811: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 812: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 813: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 814: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 815: (Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 816: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 817: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 818: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 819: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 820: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 821: (Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 822: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 823: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 824: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 825: (Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 826: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 827: (Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 828: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 829: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 830: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 831: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 832: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 833: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 834: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 835: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 836: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 837: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 838: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 839: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 840: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 841: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 842: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 843: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 844: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 845: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 846: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 847: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 848: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 849: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 850: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 851: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 852: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 853: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 854: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 855: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 856: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 857: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 858: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 859: (Person ⊓ ¬ Male) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊓ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 860: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 861: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 862: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 863: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 864: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 865: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 866: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 867: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 868: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 869: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 870: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 871: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 872: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 873: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 874: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 875: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 876: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 877: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 878: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 879: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 880: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 881: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 882: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 883: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 884: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 885: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 886: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 887: ((Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 888: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 889: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 890: ((Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 891: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 892: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 893: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 894: ((Female) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person ⊔ (Person ⊓ (¬Male))) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 895: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.3
	 f_measure: 0.4615384615384615
solution 896: ( ¬ Male)
	solution from reasoner: ¬Male
	 coverage_score: 0.2
	 f_measure: 0.0
solution 897: ∃hasChild.( ¬ Male)
	solution from reasoner: ∃ hasChild.(¬Male)
	 coverage_score: 0.1
	 f_measure: 0.0
solution 898: ∃hasChild.( ¬ Person)
	solution from reasoner: ∃ hasChild.(¬Person)
	 coverage_score: 0.1
	 f_measure: 0.0
solution 899: ∃hasChild.( ¬ Female)
	solution from reasoner: ∃ hasChild.(¬Female)
	 coverage_score: 0.1
	 f_measure: 0.0
solution 900: ∃hasChild.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: ∃ hasChild.((¬Male) ⊔ (¬Person))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 901: ( ¬ Male) ⊓ ∃hasChild.( ¬ Male)
	solution from reasoner: (¬Male) ⊓ (∃ hasChild.(¬Male))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 902: ( ¬ Male) ⊓ ∃hasChild.( ¬ Person)
	solution from reasoner: (¬Male) ⊓ (∃ hasChild.(¬Person))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 903: ∃hasChild.(( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: ∃ hasChild.((¬Female) ⊔ (¬Person))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 904: ( ¬ Male) ⊓ ∃hasChild.( ¬ Female)
	solution from reasoner: (¬Male) ⊓ (∃ hasChild.(¬Female))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 905: ∃hasChild.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: ∃ hasChild.((¬Female) ⊔ (¬Male))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 906: ∃hasChild.(( ¬ Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: ∃ hasChild.((¬Female) ⊔ (¬Male) ⊔ (¬Person))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 907: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasChild.( ¬ Male)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasChild.(¬Male))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 908: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasChild.( ¬ Person)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasChild.(¬Person))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 909: ( ¬ Male) ⊓ ∃hasChild.(( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: (¬Male) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 910: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasChild.( ¬ Male)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasChild.(¬Male))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 911: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasChild.( ¬ Person)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasChild.(¬Person))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 912: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasChild.( ¬ Female)
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasChild.(¬Female))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 913: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasChild.( ¬ Female)
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasChild.(¬Female))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 914: ( ¬ Male) ⊓ ∃hasChild.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (¬Male) ⊓ (∃ hasChild.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 915: ( ¬ Male) ⊓ ∃hasChild.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (¬Male) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Male)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 916: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasChild.( ¬ Female)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasChild.(¬Female))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 917: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 918: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.( ¬ Person)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.(¬Person))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 919: ( ¬ Male) ⊓ ∃hasChild.(( ¬ Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: (¬Male) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 920: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.( ¬ Male)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.(¬Male))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 921: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.( ¬ Female)
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.(¬Female))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 922: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 923: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Male)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 924: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 925: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Male)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 926: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 927: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasChild.( ¬ Person)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasChild.(¬Person))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 928: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasChild.( ¬ Male)
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasChild.(¬Male))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 929: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 930: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Male)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 931: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.( ¬ Female)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.(¬Female))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 932: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 933: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.(( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 934: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Male)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 935: (( ¬ Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: (Female ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 936: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.( ¬ Male)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.(¬Male))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 937: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.( ¬ Person)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.(¬Person))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 938: (( ¬ Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: (Person ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 939: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.( ¬ Male)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.(¬Male))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 940: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.( ¬ Female)
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.(¬Female))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 941: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 942: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.( ¬ Person)
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.(¬Person))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 943: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Male)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 944: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.(( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 945: ((Person) ⊔ ( ¬ Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: (Female ⊔ Person ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 946: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 947: (( ¬ Male) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.(( ¬ Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: ((Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 948: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.(( ¬ Female) ⊔ ( ¬ Male))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Male)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 949: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.(( ¬ Person) ⊔ ( ¬ Male))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Male) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 950: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.(( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 951: (( ¬ Male) ⊔ (Female) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.(( ¬ Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: (Female ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0
solution 952: (( ¬ Male) ⊔ (Person) ⊔ (Person ⊓ ¬ Male)) ⊓ ∃hasChild.(( ¬ Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: (Person ⊔ (Person ⊓ (¬Male)) ⊔ (¬Male)) ⊓ (∃ hasChild.((¬Female) ⊔ (¬Male) ⊔ (¬Person)))
	 coverage_score: 0.1
	 f_measure: 0.0

Total solutions found: 952

Program finished.
Program ends at: 09.04.2018  04.30.56 AM
Program duration: 0.202 sec
