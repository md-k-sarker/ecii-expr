Program started.............
Program starts at: 09.04.2018  04.30.54 AM
Working with confFile: Offspring.config
Algorithm starts at: 09.04.2018  04.30.54 AM

User defined parameters:
K1/negExprTypeLimit: 3
K2/hornClauseLimit: 3
K3/objPropsCombinationLimit: 3
K4/hornClausesListMaxSize: 50
K5/candidateClassesListMaxSize: 50
ReasonerName: pellet
posIndivs from conf:
	Ombretta
	Luca
	Dino
	Luigi
	Maria
	Serena
negIndivs from conf:
	Gianni
	Dora

Algorithm ends at: 09.04.2018  04.30.55 AM

Algorithm duration: 0.069 sec

####################Solutions####################:
solution 1: (Person)
	solution from reasoner: Person
	 coverage_score: 0.75
	 coverage_score_by_reasoner: 1.0
	 f_measure: 0.8571428571428571
	 f_measure_by_reasoner: 1.0
solution 2: ∃hasParent.(Male)
	solution from reasoner: ∃ hasParent.Male
	 coverage_score: 0.75
	 coverage_score_by_reasoner: 0.75
	 f_measure: 0.8571428571428571
	 f_measure_by_reasoner: 0.8571428571428571
solution 3: ∃hasParent.(Female)
	solution from reasoner: ∃ hasParent.Female
	 coverage_score: 0.75
	 coverage_score_by_reasoner: 0.75
	 f_measure: 0.8571428571428571
	 f_measure_by_reasoner: 0.8571428571428571
solution 4: ∃hasParent.(Person)
	solution from reasoner: ∃ hasParent.Person
	 coverage_score: 0.75
	 coverage_score_by_reasoner: 0.75
	 f_measure: 0.8571428571428571
	 f_measure_by_reasoner: 0.8571428571428571
solution 5: ((Male) ⊔ (Female))
	solution from reasoner: Female ⊔ Male
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 6: (Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ (∃ hasParent.Male)
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 7: ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: ∃ hasParent.(Female ⊔ Male)
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 8: ((Male) ⊔ (Person))
	solution from reasoner: Male ⊔ Person
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 9: ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: ∃ hasParent.(Male ⊔ Person)
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 10: (Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ (∃ hasParent.Female)
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 11: ((Female) ⊔ (Person))
	solution from reasoner: Female ⊔ Person
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 12: (Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ (∃ hasParent.Person)
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 13: ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: ∃ hasParent.(Female ⊔ Person)
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 14: ((Person) ⊔ (Male) ⊔ (Female))
	solution from reasoner: Female ⊔ Male ⊔ Person
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 15: ((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 16: ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: ∃ hasParent.(Female ⊔ Male ⊔ Person)
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 17: (Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 18: ((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 19: ((Male) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 20: ((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 21: ((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 22: ((Male) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 23: (Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 24: (Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 25: ((Male) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 26: ((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 27: ((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 28: ((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 29: ((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 30: (Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 31: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ (∃ hasParent.Male)
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 32: ((Male) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 33: ((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 34: ((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 35: ((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 36: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ (∃ hasParent.Female)
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 37: ((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 38: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ (∃ hasParent.Person)
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 39: ((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 40: ((Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 41: ((Male) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 42: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 43: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 44: ((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 45: ((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 46: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 47: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.75
	 f_measure: 0.8571428571428571
solution 48: ∃hasSibling.(Female)
	solution from reasoner: ∃ hasSibling.Female
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 49: ∃hasSibling.(Person)
	solution from reasoner: ∃ hasSibling.Person
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 50: ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: ∃ hasSibling.(Female ⊔ Person)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 51: ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 52: ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 53: (Person) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 54: ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 55: (Person) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Person ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 56: ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: ∃ hasSibling.(Female ⊔ Male)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 57: ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 58: ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: ∃ hasSibling.(Male ⊔ Person)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 59: ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 60: ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 61: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 62: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 63: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 64: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 65: ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 66: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 67: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Person ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 68: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 69: ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 70: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 71: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 72: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 73: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 74: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: ∃ hasSibling.(Female ⊔ Male ⊔ Person)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 75: ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 76: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ Male) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 77: ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 78: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 79: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 80: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 81: ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 82: ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 83: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 84: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ Male) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 85: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 86: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 87: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 88: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 89: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 90: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 91: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 92: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 93: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 94: ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 95: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 96: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 97: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 98: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 99: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 100: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 101: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 102: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 103: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 104: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 105: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 106: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 107: ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 108: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 109: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 110: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 111: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 112: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 113: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 114: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 115: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 116: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 117: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 118: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 119: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 120: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 121: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 122: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 123: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 124: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 125: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 126: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 127: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 128: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 129: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 130: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 131: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 132: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 133: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 134: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 135: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Person ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 136: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 137: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 138: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 139: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 140: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 141: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 142: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 143: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 144: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 145: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 146: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 147: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 148: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 149: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 150: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 151: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 152: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 153: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 154: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 155: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 156: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 157: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 158: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 159: ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 160: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 161: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 162: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 163: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 164: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 165: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 166: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 167: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 168: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 169: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 170: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 171: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 172: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 173: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 174: (Person) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 175: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 176: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 177: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 178: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 179: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 180: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 181: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 182: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 183: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 184: ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 185: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 186: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 187: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 188: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 189: (Person) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 190: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 191: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 192: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 193: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 194: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 195: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 196: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 197: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 198: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 199: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 200: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 201: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 202: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 203: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 204: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 205: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 206: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 207: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 208: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 209: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 210: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 211: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 212: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 213: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 214: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 215: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 216: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 217: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 218: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 219: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 220: ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 221: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 222: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 223: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 224: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 225: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 226: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 227: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 228: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 229: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 230: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 231: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 232: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 233: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 234: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 235: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 236: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 237: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 238: (Person) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 239: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 240: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 241: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 242: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 243: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 244: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 245: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 246: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 247: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 248: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 249: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 250: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 251: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 252: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 253: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 254: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 255: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 256: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 257: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 258: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 259: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 260: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 261: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 262: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 263: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 264: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 265: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 266: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 267: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 268: ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 269: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 270: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 271: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 272: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 273: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 274: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 275: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 276: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 277: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 278: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 279: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 280: (Person) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 281: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 282: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 283: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 284: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 285: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 286: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 287: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 288: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 289: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 290: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 291: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 292: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 293: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 294: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 295: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 296: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 297: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 298: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 299: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 300: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 301: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 302: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 303: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 304: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 305: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 306: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 307: (Person) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 308: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 309: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 310: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 311: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 312: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 313: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 314: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 315: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 316: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 317: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 318: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 319: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 320: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 321: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 322: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 323: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 324: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 325: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 326: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 327: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 328: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 329: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 330: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 331: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 332: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 333: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 334: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 335: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.625
	 f_measure: 0.7692307692307692
solution 336: ∃hasChild.(( ¬ Person) ⊔ (Male))
	solution from reasoner: ∃ hasChild.(Male ⊔ (¬Person))
	 coverage_score: 0.5
	 f_measure: 0.5
solution 337: ∃hasChild.(( ¬ Female) ⊔ (Male))
	solution from reasoner: ∃ hasChild.(Male ⊔ (¬Female))
	 coverage_score: 0.5
	 f_measure: 0.5
solution 338: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: ∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))
	 coverage_score: 0.5
	 f_measure: 0.5
solution 339: (Female)
	solution from reasoner: Female
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 340: (Male)
	solution from reasoner: Male
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 341: (Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ (∃ hasParent.Male)
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 342: (Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ (∃ hasParent.Female)
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 343: (Female) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Female ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 344: (Female) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Female ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 345: (Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ (∃ hasParent.Female)
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 346: (Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ (∃ hasParent.Person)
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 347: (Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ (∃ hasParent.Person)
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 348: (Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ (∃ hasParent.Male)
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 349: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 350: (Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 351: (Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 352: (Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 353: (Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 354: (Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 355: (Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 356: (Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 357: (Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 358: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 359: (Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 360: (Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 361: (Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 362: (Female) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Female ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 363: (Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 364: (Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 365: (Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 366: (Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 367: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 368: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 369: (Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 370: (Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 371: (Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 372: (Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Female ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 373: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 374: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 375: (Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 376: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 377: (Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 378: (Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 379: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 380: (Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 381: (Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 382: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 383: (Female) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 384: (Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 385: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 386: (Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 387: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 388: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 389: (Female) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 390: (Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 391: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 392: (Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 393: (Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 394: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 395: (Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 396: (Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 397: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 398: (Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 399: (Female) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 400: (Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 401: (Female) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 402: (Female) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.375
	 f_measure: 0.5454545454545454
solution 403: ∃hasChild.(Male)
	solution from reasoner: ∃ hasChild.Male
	 coverage_score: 0.25
	 f_measure: 0.4
solution 404: ∃hasSibling.(Male)
	solution from reasoner: ∃ hasSibling.Male
	 coverage_score: 0.25
	 f_measure: 0.4
solution 405: ∃hasChild.( ¬ Person)
	solution from reasoner: ∃ hasChild.(¬Person)
	 coverage_score: 0.25
	 f_measure: 0.0
solution 406: ∃hasChild.( ¬ Female)
	solution from reasoner: ∃ hasChild.(¬Female)
	 coverage_score: 0.25
	 f_measure: 0.0
solution 407: (Female) ⊓ ∃hasSibling.(Male)
	solution from reasoner: Female ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 408: (Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 409: ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasParent.Male) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 410: ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasParent.Female) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 411: ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 412: ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 413: (Person) ⊓ ∃hasSibling.(Male)
	solution from reasoner: Person ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 414: (Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Male ⊓ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 415: ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 416: (Person) ⊓ ∃hasChild.(Male)
	solution from reasoner: Person ⊓ (∃ hasChild.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 417: ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasParent.Person) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 418: ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 419: ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 420: ∃hasChild.(( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: ∃ hasChild.((¬Female) ⊔ (¬Person))
	 coverage_score: 0.25
	 f_measure: 0.0
solution 421: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 422: ∃hasChild.(Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 423: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 424: ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 425: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 426: ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 427: (Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 428: (Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 429: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Female ⊔ Male) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 430: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 431: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 432: (Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 433: (Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 434: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Female ⊔ Male) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 435: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 436: (Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 437: ∃hasChild.(Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 438: (Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 439: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 440: (Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 441: (Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 442: (Person) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male))
	solution from reasoner: Person ⊓ (∃ hasChild.(Male ⊔ (¬Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 443: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 444: (Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Male ⊓ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 445: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 446: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 447: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 448: ∃hasChild.(Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 449: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 450: ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 451: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 452: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 453: ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 454: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 455: ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 456: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 457: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 458: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 459: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 460: (Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 461: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 462: ∃hasChild.(Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 463: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 464: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 465: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 466: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 467: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 468: ∃hasChild.(Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 469: ∃hasChild.(Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 470: ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 471: (Person) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male))
	solution from reasoner: Person ⊓ (∃ hasChild.(Male ⊔ (¬Female)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 472: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 473: ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 474: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 475: ∃hasChild.(Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 476: ∃hasChild.(Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 477: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 478: (Person) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 479: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 480: (Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 481: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 482: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 483: (Person) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 484: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasChild.(Male ⊔ (¬Female)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 485: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 486: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 487: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 488: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 489: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 490: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 491: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 492: (Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 493: ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 494: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 495: (Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 496: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 497: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 498: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 499: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(Male)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ (∃ hasChild.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 500: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 501: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 502: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 503: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 504: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasChild.(Male ⊔ (¬Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 505: ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 506: ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 507: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 508: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 509: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 510: (Person) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 511: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 512: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 513: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 514: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 515: (Person) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 516: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ (∃ hasSibling.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 517: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 518: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 519: (Person) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 520: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 521: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 522: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasChild.(Male ⊔ (¬Female)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 523: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 524: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 525: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 526: (Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 527: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 528: ∃hasChild.(Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 529: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 530: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 531: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 532: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 533: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 534: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 535: (Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Male ⊓ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 536: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 537: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 538: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 539: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 540: ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 541: ∃hasChild.(Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 542: (Person) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 543: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 544: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 545: ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 546: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 547: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ (∃ hasChild.(Male ⊔ (¬Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 548: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 549: (Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 550: (Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 551: (Person) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 552: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 553: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 554: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 555: ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 556: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 557: ∃hasChild.(Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 558: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 559: ∃hasChild.(Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 560: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 561: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 562: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 563: (Person) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 564: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasChild.(Male ⊔ (¬Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 565: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 566: (Person) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: Person ⊓ (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 567: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 568: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ (∃ hasChild.(Male ⊔ (¬Female)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 569: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 570: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 571: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 572: (Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 573: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 574: (Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 575: (Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 576: (Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 577: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Male)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 578: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 579: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 580: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 581: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 582: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 583: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 584: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 585: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 586: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 587: (Person) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 588: (Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 589: (Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 590: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 591: (Person) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 592: (Person) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 593: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 594: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 595: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 596: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 597: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 598: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 599: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 600: (Person) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 601: (Person) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 602: (Female) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 603: (Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 604: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 605: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 606: ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 607: (Person) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 608: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 609: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 610: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 611: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 612: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 613: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 614: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 615: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 616: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 617: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 618: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 619: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 620: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 621: (Person) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 622: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 623: ((Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: (Female ⊔ Male) ⊓ (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 624: (Person) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 625: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 626: (Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 627: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 628: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 629: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 630: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 631: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 632: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 633: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 634: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 635: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 636: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 637: ∃hasChild.(Male) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 638: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 639: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 640: (Person) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 641: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 642: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 643: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 644: (Person) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 645: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 646: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 647: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 648: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 649: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 650: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 651: (Person) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 652: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 653: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 654: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ (∃ hasChild.(Male ⊔ (¬Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 655: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 656: ((Female) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: (Female ⊔ Person) ⊓ (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 657: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 658: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 659: (Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 660: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 661: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 662: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 663: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 664: (Person) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 665: (Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 666: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 667: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 668: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 669: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 670: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 671: (Person) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 672: (Person) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 673: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 674: (Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 675: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 676: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 677: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 678: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 679: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 680: ((Male) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: (Male ⊔ Person) ⊓ (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 681: (Person) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 682: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 683: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Male) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 684: ∃hasChild.(Male) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 685: (Person) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 686: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 687: (Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 688: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 689: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 690: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 691: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 692: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 693: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 694: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 695: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 696: (Person) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 697: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 698: ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 699: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 700: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 701: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 702: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 703: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 704: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 705: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 706: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 707: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 708: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 709: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 710: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 711: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 712: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 713: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 714: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 715: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 716: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 717: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ (∃ hasChild.(Male ⊔ (¬Female)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 718: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 719: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 720: (Person) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 721: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 722: (Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 723: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 724: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 725: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 726: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 727: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 728: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 729: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 730: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 731: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 732: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 733: (Person) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 734: ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 735: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 736: ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 737: (Person) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 738: (Person) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 739: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 740: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 741: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 742: ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 743: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 744: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 745: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 746: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 747: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 748: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 749: ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 750: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 751: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 752: (Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 753: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 754: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 755: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 756: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 757: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 758: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 759: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 760: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 761: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 762: (Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 763: ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 764: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 765: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 766: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 767: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 768: ((Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 769: (Person) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 770: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 771: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 772: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 773: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 774: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 775: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 776: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 777: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 778: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 779: (Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 780: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 781: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 782: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 783: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 784: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 785: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 786: ((Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 787: ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 788: ((Male) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 789: ((Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 790: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 791: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 792: ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 793: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 794: ((Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 795: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 796: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 797: ((Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 798: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 799: (Person) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 800: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 801: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 802: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 803: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 804: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 805: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 806: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 807: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 808: (Person) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 809: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 810: ((Male) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 811: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 812: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 813: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 814: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 815: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 816: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 817: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 818: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 819: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 820: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 821: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 822: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 823: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 824: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 825: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 826: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 827: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 828: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 829: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 830: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 831: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 832: (Male) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 833: ((Male) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 834: ((Female) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 835: ((Female) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 836: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 837: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 838: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 839: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 840: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 841: ((Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 842: ((Male) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 843: ((Female) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 844: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 845: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 846: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 847: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 848: (Person) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 849: ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 850: (Person) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 851: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 852: (Person) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 853: ((Male) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 854: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 855: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 856: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 857: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 858: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 859: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 860: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 861: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 862: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 863: ((Female) ⊔ (Person)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 864: (Male) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 865: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 866: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 867: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 868: (Person) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 869: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 870: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 871: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 872: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 873: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 874: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 875: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 876: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 877: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 878: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 879: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 880: ((Female) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 881: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 882: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 883: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 884: (Person) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 885: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 886: (Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 887: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 888: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 889: ((Female) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 890: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 891: ((Male) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 892: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 893: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 894: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 895: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 896: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 897: ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 898: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 899: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 900: (Person) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 901: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 902: (Person) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 903: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 904: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 905: ((Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 906: ((Female) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 907: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 908: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 909: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 910: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 911: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 912: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 913: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Person)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 914: ((Male) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 915: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 916: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 917: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 918: ((Male) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 919: ((Female) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 920: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 921: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 922: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 923: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 924: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 925: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasSibling.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 926: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 927: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 928: ((Male) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 929: ((Female) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 930: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 931: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 932: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 933: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 934: (Person) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 935: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Female) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 936: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 937: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 938: ((Female) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 939: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 940: ((Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 941: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 942: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 943: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 944: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 945: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 946: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 947: ((Female) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 948: (Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 949: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 950: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 951: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 952: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Person) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 953: ((Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 954: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 955: ((Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 956: ((Male) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 957: ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 958: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 959: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 960: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 961: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 962: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 963: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 964: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 965: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 966: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 967: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 968: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 969: ((Male) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 970: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 971: ((Male) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 972: ((Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 973: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.Female)
	 coverage_score: 0.25
	 f_measure: 0.4
solution 974: ((Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 975: (Person) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Person ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 976: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 977: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 978: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 979: ((Male) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 980: ((Female) ⊔ (Person)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 981: ((Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 982: ((Female) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 983: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 984: ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 985: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 986: ((Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 987: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 988: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 989: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 990: ((Female) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 991: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 992: ((Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 993: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 994: ((Male) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 995: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 996: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 997: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 998: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 999: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 1000: ((Male) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 1001: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 1002: ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 1003: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 1004: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 1005: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 1006: ((Female) ⊔ (Person)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 1007: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 1008: ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 1009: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 1010: ((Person) ⊔ (Male) ⊔ (Female)) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: (Female ⊔ Male ⊔ Person) ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.25
	 f_measure: 0.4
solution 1011: (Female) ⊓ ∃hasChild.(Male)
	solution from reasoner: Female ⊓ (∃ hasChild.Male)
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1012: (Male) ⊓ ∃hasChild.(Male)
	solution from reasoner: Male ⊓ (∃ hasChild.Male)
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1013: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1014: (Male) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male))
	solution from reasoner: Male ⊓ (∃ hasChild.(Male ⊔ (¬Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1015: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1016: (Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Female ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1017: (Male) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male))
	solution from reasoner: Male ⊓ (∃ hasChild.(Male ⊔ (¬Female)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1018: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1019: (Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1020: (Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1021: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1022: (Female) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male))
	solution from reasoner: Female ⊓ (∃ hasChild.(Male ⊔ (¬Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1023: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1024: (Female) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male))
	solution from reasoner: Female ⊓ (∃ hasChild.(Male ⊔ (¬Female)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1025: (Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1026: (Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Female ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1027: (Female) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1028: (Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1029: (Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1030: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1031: (Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1032: (Female) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1033: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1034: (Male) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1035: (Male) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1036: (Female) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1037: (Male) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1038: (Female) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1039: (Male) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1040: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1041: (Male) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1042: (Male) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: Male ⊓ (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1043: (Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1044: (Male) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1045: (Male) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1046: (Female) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1047: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1048: (Female) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female))
	solution from reasoner: Female ⊓ (∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1049: (Female) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1050: (Male) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1051: (Female) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1052: (Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1053: (Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1054: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1055: (Male) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1056: (Male) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1057: (Female) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1058: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1059: (Female) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1060: (Female) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1061: (Female) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1062: (Male) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1063: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1064: (Female) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1065: (Female) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1066: (Male) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1067: (Female) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1068: (Male) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1069: (Female) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Person)
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Person))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1070: (Male) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1071: (Female) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1072: (Male) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1073: (Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasChild.Male) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1074: (Male) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1075: (Female) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1076: (Female) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1077: (Male) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1078: (Male) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1079: (Male) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1080: (Female) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1081: (Male) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1082: (Female) ⊓ ∃hasChild.(Male) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasChild.Male) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1083: (Male) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1084: (Female) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1085: (Female) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1086: (Male) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1087: (Female) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Female)
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.Female))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1088: (Male) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1089: (Female) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1090: (Male) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1091: (Female) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1092: (Male) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.(Person)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.Person))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1093: (Female) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Male)
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Male))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1094: (Male) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1095: (Male) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1096: (Female) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1097: (Male) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1098: (Female) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.(Female)
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.Female))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1099: (Male) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1100: (Female) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1101: (Female) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1102: (Male) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1103: (Male) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1104: (Male) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1105: (Female) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Person) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1106: (Male) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1107: (Female) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1108: (Male) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1109: (Female) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1110: (Female) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1111: (Female) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1112: (Male) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1113: (Male) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1114: (Female) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Male) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1115: (Female) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1116: (Male) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1117: (Female) ⊓ ∃hasChild.(( ¬ Person) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1118: (Male) ⊓ ∃hasChild.(( ¬ Female) ⊔ (Male)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1119: (Female) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1120: (Male) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasSibling.((Person) ⊔ (Female) ⊔ (Male))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasSibling.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1121: (Male) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Male ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222
solution 1122: (Female) ⊓ ∃hasChild.((Male) ⊔ ( ¬ Person) ⊔ ( ¬ Female)) ⊓ ∃hasParent.((Male) ⊔ (Female) ⊔ (Person))
	solution from reasoner: Female ⊓ ((∃ hasChild.(Male ⊔ (¬Female) ⊔ (¬Person))) ⊔ (∃ hasParent.(Female ⊔ Male ⊔ Person)))
	 coverage_score: 0.125
	 f_measure: 0.2222222222222222

Total solutions found: 1122

Program finished.
Program ends at: 09.04.2018  04.30.55 AM
Program duration: 0.148 sec
