 dl_cli trains.conf   
DL-Learner command line interface
Initializing component 'ks' of type KB File ...
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$2 (file:/Applications/dllearner/dllearner-1.3.0/lib/guice-4.0.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$2
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
... initialized component 'ks' in 488ms. Status: OK
Initializing component 'reasoner' of type closed world reasoner ...
Loaded reasoner: Pellet (com.clarkparsia.pellet.owlapiv3.PelletReasoner)
Materializing TBox...
...TBox materialised in 126 ms.
... initialized component 'reasoner' in 374ms. Status: OK
Initializing component 'lp' of type PosNegLPStandard ...
... initialized component 'lp' in 1ms. Status: OK
Initializing component 'alg' of type OWL Class Expression Learner ...
... initialized component 'alg' in 20ms. Status: OK
Running algorithm instance "alg" (OCEL)
starting top down refinement with: Thing (50% accuracy)
more accurate (80.00%) class expression found: has_car some closed
more accurate (100.00%) class expression found: has_car some (closed and short)
Maximum time (5 seconds) reached, stopping now...
solutions (at most 20 are shown):
1: has_car some (closed and short) (accuracy 100%, length 5, depth 1)
2: train and (has_car some (closed and short)) (accuracy 100%, length 7, depth 1)
3: has_car some (car and closed and short) (accuracy 100%, length 7, depth 1)
4: (not (car)) and (has_car some (closed and short)) (accuracy 100%, length 8, depth 1)
5: (not (closed)) and (has_car some (closed and short)) (accuracy 100%, length 8, depth 1)
6: (not (double)) and (has_car some (closed and short)) (accuracy 100%, length 8, depth 1)
7: (not (jagged)) and (has_car some (closed and short)) (accuracy 100%, length 8, depth 1)
8: (not (long)) and (has_car some (closed and short)) (accuracy 100%, length 8, depth 1)
9: (not (open_car)) and (has_car some (closed and short)) (accuracy 100%, length 8, depth 1)
10: (not (short)) and (has_car some (closed and short)) (accuracy 100%, length 8, depth 1)
11: (has_car some Thing) and (has_car some (closed and short)) (accuracy 100%, length 9, depth 1)
12: has_car some (closed and short and (not (double))) (accuracy 100%, length 8, depth 1)
13: has_car some (closed and short and (not (jagged))) (accuracy 100%, length 8, depth 1)
14: has_car some (closed and short and (not (long))) (accuracy 100%, length 8, depth 1)
15: has_car some (closed and short and (not (open_car))) (accuracy 100%, length 8, depth 1)
16: has_car some (closed and short and (not (train))) (accuracy 100%, length 8, depth 1)
17: has_car some (closed and short and (load some Thing)) (accuracy 100%, length 9, depth 2)
18: has_car some (closed and short and (load_count some Thing)) (accuracy 100%, length 9, depth 2)
19: has_car some (closed and short and (shape some Thing)) (accuracy 100%, length 9, depth 2)
20: has_car some (closed and short and (wheels some Thing)) (accuracy 100%, length 9, depth 2)
Algorithm stopped (18840 descriptions tested).
